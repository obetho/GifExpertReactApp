{"version":3,"sources":["components/AddCategory.js","utils/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GIfExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mNAGaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAAoB,EACXC,mBAAS,IADE,mBACxCC,EADwC,KAC5BC,EAD4B,KAiB/C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAQ,IAC1BR,GAAc,SAAAS,GAAI,OAAOP,GAAP,mBAAsBO,OACxCN,EAAc,OAQd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,Y,uBCHnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAC3B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCFPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,2BAAIA,KCDHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAkBxC,OAZAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAItB,CAAEpB,IAEGqB,EDb0BK,CAAc1B,GAAlCa,EAHwB,EAG7BN,KAAaa,EAHgB,EAGhBA,QAGrB,OACI,oCACI,wBAAIJ,UAAU,gDAAiDhB,GAC7DoB,GAAW,uBAAGJ,UAAU,oCAAb,WACb,yBAAKA,UAAU,aAEHH,EAAOJ,KAAI,SAAEC,GAAF,OACP,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEerBkB,EA/BM,WAAM,MAEa1C,mBAAS,CAAC,cAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAUvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAIA,4BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACI2B,IAAM3B,EACNA,SAAWA,UCtBvC8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.9b25f60e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ( { setCategories }) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if( inputValue.trim().length >2 ){\n            setCategories(cats =>  [ inputValue, ...cats]);\n            setInputValue('');\n        }\n        // console.log('Submit');\n        \n\n    }\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\n\n\n\nexport const getGifs = async( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=qEqoVoHkQAz4yTm6yqpXV73hpgGDMgTB`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map ( img => {\n        return{\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src={ url } alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React  from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n// import { getGifs } from '../utils/getGifs';\n\nexport const GifGrid = ({ category }) => {\n    \n    // const [images, setImages] = useState([])\n    const { data:images, loading } = useFetchGifs( category );\n\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeInBottomRight\">{ category }</h3>\n            { loading && <p className=\"animate__animated animate__flash\">loading</p> }\n            <div className=\"card-grid\">\n                    {\n                        images.map(( img ) => (\n                            <GifGridItem \n                                key={img.id}\n                                {...img} \n                            />\n                        ))\n                    }\n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../utils/getGifs\";\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data:[],\n        loading: true\n    });\n\n    useEffect( ()=> {\n\n        getGifs( category )\n            .then( imgs => {\n                setState({\n                    data:imgs,\n                    loading:false\n                });\n            })\n\n    },[ category ]);\n\n    return state;\n\n}","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n    // const categories = ['One puch','Samura X', 'Dragon Ball'];\n    const [categories, setCategories] = useState(['One punch']);\n\n    // const handleAdd = () => {\n    //     // setCategories( [...categories, 'perro'] );\n    //     setCategories(cats =>  [...cats, 'Perro']);\n    // }\n\n\n    return(\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr/>\n\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\n\n            <ol>\n                {\n                    categories.map(category => (\n                        <GifGrid \n                            key={ category }\n                            category={ category } />\n                    ))\n                }\n            </ol>\n        </>\n    )\n} \n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GIfExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}